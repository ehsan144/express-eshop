// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum UserRole {
  USER
  ADMIN
  SUPERADMIN
}
enum Membership {
  SILVER
  BRONZE
  GOLD
}
model User {
  id         Int        @id @default(autoincrement())
  username   String     @db.VarChar(50) @unique
  password   String     @db.VarChar(255)
  email      String     @db.VarChar(50) @unique
  role       UserRole   @default(USER)
  membership Membership @default(BRONZE)
  profile    Profile?
  addresses  Address[]
  products   Product[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@unique([username, email])
}
model Profile {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int      @unique
  imagePath   String?  @db.Text
  firstName   String?  @db.VarChar(50)
  lastName    String?  @db.VarChar(50)
  phoneNumber String?  @db.VarChar(13)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model Address {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  title     String   @db.VarChar(50)
  address   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Product {
  id          Int            @id @default(autoincrement())
  title       String         @db.VarChar(50)
  slug        String         @db.VarChar(100)
  description String?        @db.Text
  owner       User?          @relation(fields: [ownerId], references: [id], onDelete: SetNull)
  ownerId     Int?
  images      ProductImage[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}
model ProductImage {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  imagePath String   @db.Text
  alt       String   @db.VarChar(50)
  createdAt DateTime @default(now())
}
